// Mocks generated by Mockito 5.4.5 from annotations
// in maestro_vs_flutter_test/test/domain/repositories/mock_quote_repository.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:maestro_vs_flutter_test/domain/entities/quote.dart' as _i2;
import 'package:maestro_vs_flutter_test/domain/repositories/quote_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeQuote_0 extends _i1.SmartFake implements _i2.Quote {
  _FakeQuote_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [QuoteRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockQuoteRepository extends _i1.Mock implements _i3.QuoteRepository {
  @override
  _i4.Future<List<_i2.Quote>> getQuotes() =>
      (super.noSuchMethod(
            Invocation.method(#getQuotes, []),
            returnValue: _i4.Future<List<_i2.Quote>>.value(<_i2.Quote>[]),
            returnValueForMissingStub: _i4.Future<List<_i2.Quote>>.value(
              <_i2.Quote>[],
            ),
          )
          as _i4.Future<List<_i2.Quote>>);

  @override
  _i4.Future<_i2.Quote> getQuoteById(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getQuoteById, [id]),
            returnValue: _i4.Future<_i2.Quote>.value(
              _FakeQuote_0(this, Invocation.method(#getQuoteById, [id])),
            ),
            returnValueForMissingStub: _i4.Future<_i2.Quote>.value(
              _FakeQuote_0(this, Invocation.method(#getQuoteById, [id])),
            ),
          )
          as _i4.Future<_i2.Quote>);
}
